    auto cfg_ut = config.new_usertype<CFG>("cryptonote_config");

    cfg_ut.set("CRYPTONOTE_DNS_TIMEOUT_MS",                             sol::readonly(&CFG::c_CRYPTONOTE_DNS_TIMEOUT_MS));
    cfg_ut.set("CRYPTONOTE_MAX_BLOCK_NUMBER",                           sol::readonly(&CFG::c_CRYPTONOTE_MAX_BLOCK_NUMBER));
    cfg_ut.set("CRYPTONOTE_MAX_TX_SIZE",                                sol::readonly(&CFG::c_CRYPTONOTE_MAX_TX_SIZE));
    cfg_ut.set("CRYPTONOTE_MAX_TX_PER_BLOCK",                           sol::readonly(&CFG::c_CRYPTONOTE_MAX_TX_PER_BLOCK));
    cfg_ut.set("CRYPTONOTE_PUBLIC_ADDRESS_TEXTBLOB_VER",                sol::readonly(&CFG::c_CRYPTONOTE_PUBLIC_ADDRESS_TEXTBLOB_VER));
    cfg_ut.set("CRYPTONOTE_MINED_MONEY_UNLOCK_WINDOW",                  sol::readonly(&CFG::c_CRYPTONOTE_MINED_MONEY_UNLOCK_WINDOW));
    cfg_ut.set("CURRENT_TRANSACTION_VERSION",                           sol::readonly(&CFG::c_CURRENT_TRANSACTION_VERSION));
    cfg_ut.set("CURRENT_BLOCK_MAJOR_VERSION",                           sol::readonly(&CFG::c_CURRENT_BLOCK_MAJOR_VERSION));
    cfg_ut.set("CURRENT_BLOCK_MINOR_VERSION",                           sol::readonly(&CFG::c_CURRENT_BLOCK_MINOR_VERSION));
    cfg_ut.set("CRYPTONOTE_BLOCK_FUTURE_TIME_LIMIT",                    sol::readonly(&CFG::c_CRYPTONOTE_BLOCK_FUTURE_TIME_LIMIT));
    cfg_ut.set("CRYPTONOTE_DEFAULT_TX_SPENDABLE_AGE",                   sol::readonly(&CFG::c_CRYPTONOTE_DEFAULT_TX_SPENDABLE_AGE));
    cfg_ut.set("BLOCKCHAIN_TIMESTAMP_CHECK_WINDOW",                     sol::readonly(&CFG::c_BLOCKCHAIN_TIMESTAMP_CHECK_WINDOW));
    cfg_ut.set("MONEY_SUPPLY",                                          sol::readonly(&CFG::c_MONEY_SUPPLY));
    cfg_ut.set("EMISSION_SPEED_FACTOR_PER_MINUTE",                      sol::readonly(&CFG::c_EMISSION_SPEED_FACTOR_PER_MINUTE));
    cfg_ut.set("FINAL_SUBSIDY_PER_MINUTE",                              sol::readonly(&CFG::c_FINAL_SUBSIDY_PER_MINUTE));
    cfg_ut.set("CRYPTONOTE_REWARD_BLOCKS_WINDOW",                       sol::readonly(&CFG::c_CRYPTONOTE_REWARD_BLOCKS_WINDOW));
    cfg_ut.set("CRYPTONOTE_BLOCK_GRANTED_FULL_REWARD_ZONE_V2",          sol::readonly(&CFG::c_CRYPTONOTE_BLOCK_GRANTED_FULL_REWARD_ZONE_V2));
    cfg_ut.set("CRYPTONOTE_BLOCK_GRANTED_FULL_REWARD_ZONE_V1",          sol::readonly(&CFG::c_CRYPTONOTE_BLOCK_GRANTED_FULL_REWARD_ZONE_V1));
    cfg_ut.set("CRYPTONOTE_BLOCK_GRANTED_FULL_REWARD_ZONE_V5",          sol::readonly(&CFG::c_CRYPTONOTE_BLOCK_GRANTED_FULL_REWARD_ZONE_V5));
    cfg_ut.set("CRYPTONOTE_LONG_TERM_BLOCK_WEIGHT_WINDOW_SIZE",         sol::readonly(&CFG::c_CRYPTONOTE_LONG_TERM_BLOCK_WEIGHT_WINDOW_SIZE));
    cfg_ut.set("CRYPTONOTE_SHORT_TERM_BLOCK_WEIGHT_SURGE_FACTOR",       sol::readonly(&CFG::c_CRYPTONOTE_SHORT_TERM_BLOCK_WEIGHT_SURGE_FACTOR));
    cfg_ut.set("CRYPTONOTE_COINBASE_BLOB_RESERVED_SIZE",                sol::readonly(&CFG::c_CRYPTONOTE_COINBASE_BLOB_RESERVED_SIZE));
    cfg_ut.set("CRYPTONOTE_DISPLAY_DECIMAL_POINT",                      sol::readonly(&CFG::c_CRYPTONOTE_DISPLAY_DECIMAL_POINT));
    cfg_ut.set("COIN",                                                  sol::readonly(&CFG::c_COIN));
    cfg_ut.set("FEE_PER_KB_OLD",                                        sol::readonly(&CFG::c_FEE_PER_KB_OLD));
    cfg_ut.set("FEE_PER_KB",                                            sol::readonly(&CFG::c_FEE_PER_KB));
    cfg_ut.set("FEE_PER_BYTE",                                          sol::readonly(&CFG::c_FEE_PER_BYTE));
    cfg_ut.set("DYNAMIC_FEE_PER_KB_BASE_FEE",                           sol::readonly(&CFG::c_DYNAMIC_FEE_PER_KB_BASE_FEE));
    cfg_ut.set("DYNAMIC_FEE_PER_KB_BASE_BLOCK_REWARD",                  sol::readonly(&CFG::c_DYNAMIC_FEE_PER_KB_BASE_BLOCK_REWARD));
    cfg_ut.set("DYNAMIC_FEE_PER_KB_BASE_FEE_V5",                        sol::readonly(&CFG::c_DYNAMIC_FEE_PER_KB_BASE_FEE_V5));
    cfg_ut.set("DYNAMIC_FEE_REFERENCE_TRANSACTION_WEIGHT",              sol::readonly(&CFG::c_DYNAMIC_FEE_REFERENCE_TRANSACTION_WEIGHT));
    cfg_ut.set("ORPHANED_BLOCKS_MAX_COUNT",                             sol::readonly(&CFG::c_ORPHANED_BLOCKS_MAX_COUNT));
    cfg_ut.set("DIFFICULTY_TARGET_V2",                                  sol::readonly(&CFG::c_DIFFICULTY_TARGET_V2));
    cfg_ut.set("DIFFICULTY_TARGET_V1",                                  sol::readonly(&CFG::c_DIFFICULTY_TARGET_V1));
    cfg_ut.set("DIFFICULTY_WINDOW",                                     sol::readonly(&CFG::c_DIFFICULTY_WINDOW));
    cfg_ut.set("DIFFICULTY_LAG",                                        sol::readonly(&CFG::c_DIFFICULTY_LAG));
    cfg_ut.set("DIFFICULTY_CUT",                                        sol::readonly(&CFG::c_DIFFICULTY_CUT));
    cfg_ut.set("DIFFICULTY_BLOCKS_COUNT",                               sol::readonly(&CFG::c_DIFFICULTY_BLOCKS_COUNT));
    cfg_ut.set("CRYPTONOTE_LOCKED_TX_ALLOWED_DELTA_SECONDS_V1",         sol::readonly(&CFG::c_CRYPTONOTE_LOCKED_TX_ALLOWED_DELTA_SECONDS_V1));
    cfg_ut.set("CRYPTONOTE_LOCKED_TX_ALLOWED_DELTA_SECONDS_V2",         sol::readonly(&CFG::c_CRYPTONOTE_LOCKED_TX_ALLOWED_DELTA_SECONDS_V2));
    cfg_ut.set("CRYPTONOTE_LOCKED_TX_ALLOWED_DELTA_BLOCKS",             sol::readonly(&CFG::c_CRYPTONOTE_LOCKED_TX_ALLOWED_DELTA_BLOCKS));
    cfg_ut.set("DIFFICULTY_BLOCKS_ESTIMATE_TIMESPAN",                   sol::readonly(&CFG::c_DIFFICULTY_BLOCKS_ESTIMATE_TIMESPAN));
    cfg_ut.set("BLOCKS_IDS_SYNCHRONIZING_DEFAULT_COUNT",                sol::readonly(&CFG::c_BLOCKS_IDS_SYNCHRONIZING_DEFAULT_COUNT));
    cfg_ut.set("BLOCKS_IDS_SYNCHRONIZING_MAX_COUNT",                    sol::readonly(&CFG::c_BLOCKS_IDS_SYNCHRONIZING_MAX_COUNT));
    cfg_ut.set("BLOCKS_SYNCHRONIZING_DEFAULT_COUNT_PRE_V4",             sol::readonly(&CFG::c_BLOCKS_SYNCHRONIZING_DEFAULT_COUNT_PRE_V4));
    cfg_ut.set("BLOCKS_SYNCHRONIZING_DEFAULT_COUNT",                    sol::readonly(&CFG::c_BLOCKS_SYNCHRONIZING_DEFAULT_COUNT));
    cfg_ut.set("BLOCKS_SYNCHRONIZING_MAX_COUNT",                        sol::readonly(&CFG::c_BLOCKS_SYNCHRONIZING_MAX_COUNT));
    cfg_ut.set("CRYPTONOTE_MEMPOOL_TX_LIVETIME",                        sol::readonly(&CFG::c_CRYPTONOTE_MEMPOOL_TX_LIVETIME));
    cfg_ut.set("CRYPTONOTE_MEMPOOL_TX_FROM_ALT_BLOCK_LIVETIME",         sol::readonly(&CFG::c_CRYPTONOTE_MEMPOOL_TX_FROM_ALT_BLOCK_LIVETIME));
    cfg_ut.set("CRYPTONOTE_DANDELIONPP_STEMS",                          sol::readonly(&CFG::c_CRYPTONOTE_DANDELIONPP_STEMS));
    cfg_ut.set("CRYPTONOTE_DANDELIONPP_FLUFF_PROBABILITY",              sol::readonly(&CFG::c_CRYPTONOTE_DANDELIONPP_FLUFF_PROBABILITY));
    cfg_ut.set("CRYPTONOTE_DANDELIONPP_MIN_EPOCH",                      sol::readonly(&CFG::c_CRYPTONOTE_DANDELIONPP_MIN_EPOCH));
    cfg_ut.set("CRYPTONOTE_DANDELIONPP_EPOCH_RANGE",                    sol::readonly(&CFG::c_CRYPTONOTE_DANDELIONPP_EPOCH_RANGE));
    cfg_ut.set("CRYPTONOTE_DANDELIONPP_FLUSH_AVERAGE",                  sol::readonly(&CFG::c_CRYPTONOTE_DANDELIONPP_FLUSH_AVERAGE));
    cfg_ut.set("CRYPTONOTE_DANDELIONPP_EMBARGO_AVERAGE",                sol::readonly(&CFG::c_CRYPTONOTE_DANDELIONPP_EMBARGO_AVERAGE));
    cfg_ut.set("CRYPTONOTE_NOISE_MIN_EPOCH",                            sol::readonly(&CFG::c_CRYPTONOTE_NOISE_MIN_EPOCH));
    cfg_ut.set("CRYPTONOTE_NOISE_EPOCH_RANGE",                          sol::readonly(&CFG::c_CRYPTONOTE_NOISE_EPOCH_RANGE));
    cfg_ut.set("CRYPTONOTE_NOISE_MIN_DELAY",                            sol::readonly(&CFG::c_CRYPTONOTE_NOISE_MIN_DELAY));
    cfg_ut.set("CRYPTONOTE_NOISE_DELAY_RANGE",                          sol::readonly(&CFG::c_CRYPTONOTE_NOISE_DELAY_RANGE));
    cfg_ut.set("CRYPTONOTE_NOISE_BYTES",                                sol::readonly(&CFG::c_CRYPTONOTE_NOISE_BYTES));
    cfg_ut.set("CRYPTONOTE_NOISE_CHANNELS",                             sol::readonly(&CFG::c_CRYPTONOTE_NOISE_CHANNELS));
    cfg_ut.set("CRYPTONOTE_FORWARD_DELAY_BASE",                         sol::readonly(&CFG::c_CRYPTONOTE_FORWARD_DELAY_BASE));
    cfg_ut.set("CRYPTONOTE_FORWARD_DELAY_AVERAGE",                      sol::readonly(&CFG::c_CRYPTONOTE_FORWARD_DELAY_AVERAGE));
    cfg_ut.set("CRYPTONOTE_MAX_FRAGMENTS",                              sol::readonly(&CFG::c_CRYPTONOTE_MAX_FRAGMENTS));
    cfg_ut.set("COMMAND_RPC_GET_BLOCKS_FAST_MAX_BLOCK_COUNT",           sol::readonly(&CFG::c_COMMAND_RPC_GET_BLOCKS_FAST_MAX_BLOCK_COUNT));
    cfg_ut.set("COMMAND_RPC_GET_BLOCKS_FAST_MAX_TX_COUNT",              sol::readonly(&CFG::c_COMMAND_RPC_GET_BLOCKS_FAST_MAX_TX_COUNT));
    cfg_ut.set("MAX_RPC_CONTENT_LENGTH",                                sol::readonly(&CFG::c_MAX_RPC_CONTENT_LENGTH));
    cfg_ut.set("CRYPTONOTE_NAME",                                       sol::readonly(&CFG::c_CRYPTONOTE_NAME));
    cfg_ut.set("COIN_NAME",                                             sol::readonly(&CFG::c_COIN_NAME));
    cfg_ut.set("MILLICOIN_NAME",                                        sol::readonly(&CFG::c_MILLICOIN_NAME));
    cfg_ut.set("MICROCOIN_NAME",                                        sol::readonly(&CFG::c_MICROCOIN_NAME));
    cfg_ut.set("NANOCOIN_NAME",                                         sol::readonly(&CFG::c_NANOCOIN_NAME));
    cfg_ut.set("PICOCOIN_NAME",                                         sol::readonly(&CFG::c_PICOCOIN_NAME));
    cfg_ut.set("CRYPTONOTE_PRUNING_STRIPE_SIZE",                        sol::readonly(&CFG::c_CRYPTONOTE_PRUNING_STRIPE_SIZE));
    cfg_ut.set("CRYPTONOTE_PRUNING_LOG_STRIPES",                        sol::readonly(&CFG::c_CRYPTONOTE_PRUNING_LOG_STRIPES));
    cfg_ut.set("CRYPTONOTE_PRUNING_TIP_BLOCKS",                         sol::readonly(&CFG::c_CRYPTONOTE_PRUNING_TIP_BLOCKS));
    cfg_ut.set("MAX_TX_EXTRA_SIZE",                                     sol::readonly(&CFG::c_MAX_TX_EXTRA_SIZE));
    cfg_ut.set("MAX_TX_EXTRA_MSG_SIZE",                                 sol::readonly(&CFG::c_MAX_TX_EXTRA_MSG_SIZE));
    cfg_ut.set("MAX_TX_MSG_PRUNABLE_SIZE",                              sol::readonly(&CFG::c_MAX_TX_MSG_PRUNABLE_SIZE));
    cfg_ut.set("MSG_TX_AMOUNT",                                         sol::readonly(&CFG::c_MSG_TX_AMOUNT));
    cfg_ut.set("MSG_TX_EXTRA_TYPE",                                     sol::readonly(&CFG::c_MSG_TX_EXTRA_TYPE));
    cfg_ut.set("MSG_TX_EXTRA_FREQ_0",                                   sol::readonly(&CFG::c_MSG_TX_EXTRA_FREQ_0));
    cfg_ut.set("ATOMIC_SWAP_MSG_TX_EXTRA_TYPE",                         sol::readonly(&CFG::c_ATOMIC_SWAP_MSG_TX_EXTRA_TYPE));
    cfg_ut.set("ATOMIC_SWAP_HASH_X_UNLOCK_TIME",                        sol::readonly(&CFG::c_ATOMIC_SWAP_HASH_X_UNLOCK_TIME));
    cfg_ut.set("CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX",               sol::readonly(&CFG::c_CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX));
    cfg_ut.set("CRYPTONOTE_PUBLIC_INTEGRATED_ADDRESS_BASE58_PREFIX",    sol::readonly(&CFG::c_CRYPTONOTE_PUBLIC_INTEGRATED_ADDRESS_BASE58_PREFIX));
    cfg_ut.set("CRYPTONOTE_PUBLIC_CHANNEL_ADDRESS_BASE58_PREFIX",       sol::readonly(&CFG::c_CRYPTONOTE_PUBLIC_CHANNEL_ADDRESS_BASE58_PREFIX));
    cfg_ut.set("CRYPTONOTE_PUBLIC_SUBADDRESS_BASE58_PREFIX",            sol::readonly(&CFG::c_CRYPTONOTE_PUBLIC_SUBADDRESS_BASE58_PREFIX));
    cfg_ut.set("P2P_DEFAULT_PORT",                                      sol::readonly(&CFG::c_P2P_DEFAULT_PORT));
    cfg_ut.set("RPC_DEFAULT_PORT",                                      sol::readonly(&CFG::c_RPC_DEFAULT_PORT));
    cfg_ut.set("ZMQ_RPC_DEFAULT_PORT",                                  sol::readonly(&CFG::c_ZMQ_RPC_DEFAULT_PORT));
    cfg_ut.set("NETWORK_ID",                                            sol::readonly(&CFG::c_NETWORK_ID));
    cfg_ut.set("GENESIS_TX",                                            sol::readonly(&CFG::c_GENESIS_TX));
    cfg_ut.set("GENESIS_NONCE",                                         sol::readonly(&CFG::c_GENESIS_NONCE));
    cfg_ut.set("GENESIS_TIMESTAMP",                                     sol::readonly(&CFG::c_GENESIS_TIMESTAMP));
                                                                                                                                   
    cfg_ut.set("testnet.CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX",              sol::readonly(&CFG::c_t_CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX));
    cfg_ut.set("testnet.CRYPTONOTE_PUBLIC_INTEGRATED_ADDRESS_BASE58_PREFIX",   sol::readonly(&CFG::c_t_CRYPTONOTE_PUBLIC_INTEGRATED_ADDRESS_BASE58_PREFIX));
    cfg_ut.set("testnet.CRYPTONOTE_PUBLIC_CHANNEL_ADDRESS_BASE58_PREFIX",      sol::readonly(&CFG::c_t_CRYPTONOTE_PUBLIC_CHANNEL_ADDRESS_BASE58_PREFIX));
    cfg_ut.set("testnet.CRYPTONOTE_PUBLIC_SUBADDRESS_BASE58_PREFIX",           sol::readonly(&CFG::c_t_CRYPTONOTE_PUBLIC_SUBADDRESS_BASE58_PREFIX));
    cfg_ut.set("testnet.P2P_DEFAULT_PORT",                                     sol::readonly(&CFG::c_t_P2P_DEFAULT_PORT));
    cfg_ut.set("testnet.RPC_DEFAULT_PORT",                                     sol::readonly(&CFG::c_t_RPC_DEFAULT_PORT));
    cfg_ut.set("testnet.ZMQ_RPC_DEFAULT_PORT",                                 sol::readonly(&CFG::c_t_ZMQ_RPC_DEFAULT_PORT));
    cfg_ut.set("testnet.NETWORK_ID",                                           sol::readonly(&CFG::c_t_NETWORK_ID));
    cfg_ut.set("testnet.GENESIS_TX",                                           sol::readonly(&CFG::c_t_GENESIS_TX));
    cfg_ut.set("testnet.GENESIS_NONCE",                                        sol::readonly(&CFG::c_t_GENESIS_NONCE));
    cfg_ut.set("testnet.GENESIS_TIMESTAMP",                                    sol::readonly(&CFG::c_t_GENESIS_TIMESTAMP));
                                                                                                                                           
    cfg_ut.set("stagenet.CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX",             sol::readonly(&CFG::c_s_CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX));
    cfg_ut.set("stagenet.CRYPTONOTE_PUBLIC_INTEGRATED_ADDRESS_BASE58_PREFIX",  sol::readonly(&CFG::c_s_CRYPTONOTE_PUBLIC_INTEGRATED_ADDRESS_BASE58_PREFIX));
    cfg_ut.set("stagenet.CRYPTONOTE_PUBLIC_CHANNEL_ADDRESS_BASE58_PREFIX",     sol::readonly(&CFG::c_s_CRYPTONOTE_PUBLIC_CHANNEL_ADDRESS_BASE58_PREFIX));
    cfg_ut.set("stagenet.CRYPTONOTE_PUBLIC_SUBADDRESS_BASE58_PREFIX",          sol::readonly(&CFG::c_s_CRYPTONOTE_PUBLIC_SUBADDRESS_BASE58_PREFIX));
    cfg_ut.set("stagenet.P2P_DEFAULT_PORT",                                    sol::readonly(&CFG::c_s_P2P_DEFAULT_PORT));
    cfg_ut.set("stagenet.RPC_DEFAULT_PORT",                                    sol::readonly(&CFG::c_s_RPC_DEFAULT_PORT));
    cfg_ut.set("stagenet.ZMQ_RPC_DEFAULT_PORT",                                sol::readonly(&CFG::c_s_ZMQ_RPC_DEFAULT_PORT));
    cfg_ut.set("stagenet.NETWORK_ID_",                                         sol::readonly(&CFG::c_s_NETWORK_ID));
    cfg_ut.set("stagenet.GENESIS_TX",                                          sol::readonly(&CFG::c_s_GENESIS_TX));
    cfg_ut.set("stagenet.GENESIS_NONCE",                                       sol::readonly(&CFG::c_s_GENESIS_NONCE));
    cfg_ut.set("stagenet.GENESIS_TIMESTAMP",                                   sol::readonly(&CFG::c_s_GENESIS_TIMESTAMP));
